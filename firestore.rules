rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- REGLA FUNDAMENTAL: Denegar todo acceso por defecto ---
    match /{document=**} {
      allow read, write: if false;
    }

    // --- FUNCIONES DE UTILIDAD Y AUTORIZACIÃ“N ---
    function isSignedIn() {
      return request.auth != null;
    }

    // Obtiene el documento del usuario que realiza la peticiÃ³n.
    // El ID del documento DEBE ser el email normalizado para que esto funcione.
    function getRequestingUserDoc() {
      return get(/databases/$(database)/documents/users/$(request.auth.token.email.lower()));
    }

    // Verifica si el usuario autenticado tiene el rol de 'administrador' en la DB.
    // ðŸ”¥ CORRECCIÃ“N: Se elimina la dependencia del 'Primary Admin' hardcodeado.
    function isRegisteredAdmin() {
      return isSignedIn() && getRequestingUserDoc().data.role == 'administrador';
    }

    // --- REGLAS PARA LA COLECCIÃ“N DE USUARIOS (`users`) ---
    match /users/{userEmail} {
      // ðŸ”¥ REGLA CORREGIDA: Un usuario solo puede leer su propio perfil.
      // Un administrador puede leer cualquier perfil.
      allow read: if isSignedIn() && (request.auth.token.email.lower() == userEmail || isRegisteredAdmin());

      // Solo un administrador puede crear usuarios.
      allow create: if isRegisteredAdmin();

      // ðŸ”¥ REGLA CORREGIDA Y SEGURA:
      // Un admin puede actualizar cualquier campo.
      // Un usuario puede actualizar su propio perfil, PERO no puede cambiar su rol
      // ni sobrescribir un UID existente. Puede escribir su UID solo una vez.
      allow update: if isSignedIn() && (
        isRegisteredAdmin() || (
          request.auth.token.email.lower() == userEmail &&
          request.resource.data.role == resource.data.role && // El rol no puede cambiar
          (
            request.resource.data.firebaseUid == request.auth.uid &&
            resource.data.firebaseUid == null // Solo se puede escribir el UID si no existe
          )
        )
      );

      // Solo un administrador puede eliminar usuarios.
      allow delete: if isRegisteredAdmin();
    }

    // --- REGLAS PARA LA COLECCIÃ“N DE ACTIVIDADES (`activities`) ---
    match /activities/{activityId} {
      // ðŸ”¥ REGLA CORREGIDA: Un usuario puede leer una actividad si es admin o si estÃ¡ asignado a ella.
      // (Se asume que la actividad tiene un campo como `responsibleEmail` o `assignedTo`).
      allow read: if isSignedIn() &&
        (isRegisteredAdmin() || resource.data.responsibleEmail.lower() == request.auth.token.email.lower());

      // Solo administradores pueden crear, actualizar o eliminar actividades.
      allow create, update, delete: if isRegisteredAdmin();
    }
  }
}